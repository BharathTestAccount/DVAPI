<!DOCTYPE html>
<html lang="en">

<head>

    <style>
		/* Styling for the card and overlay */
		.card2 {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        background-color: rgb(237, 240, 243);
        box-shadow: 0px 8px 8px 0px rgba(0, 0, 0, 0.425);
        border-radius: 5px;
        display: none;
        z-index: 1;
        margin: 10px;
        width: 1400px;
        height: 700px;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    .card2.show {
        opacity: 1;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0);
        display: none;
        z-index: 1;
    }

    .card-body {
        position: relative;
    }

.input-group {
  position: absolute;
  bottom: 0;
  width: 100%;
  padding: 10px;
  background-color: #f5f5f500;
  box-sizing: border-box;
}

.form-control {
  width: 100%;
  margin-bottom: 10px;
  bottom: 0;
}

.btn {
  width: 100%;
}
        
    </style>
    <!-- Required meta tags-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="au theme template">
    <meta name="author" content="Hau Nguyen">
    <meta name="keywords" content="au theme template">

    <!-- Title Page-->
    <title>Challenges</title>

    <!-- Fontfaces CSS-->
    <link href="/css/font-face.css" rel="stylesheet" media="all">
    <link href="/vendor/font-awesome-5/css/fontawesome-all.min.css" rel="stylesheet" media="all">
    <link href="/vendor/font-awesome-4.7/css/font-awesome.min.css" rel="stylesheet" media="all">
    <link href="/vendor/mdi-font/css/material-design-iconic-font.min.css" rel="stylesheet" media="all">

    <!-- Bootstrap CSS-->
    <link href="/vendor/bootstrap-4.1/bootstrap.min.css" rel="stylesheet" media="all">

    <!-- Vendor CSS-->
    <link href="/vendor/animsition/animsition.min.css" rel="stylesheet" media="all">
    <link href="/vendor/bootstrap-progressbar/bootstrap-progressbar-3.3.4.min.css" rel="stylesheet" media="all">
    <link href="/vendor/wow/animate.css" rel="stylesheet" media="all">
    <link href="/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" media="all">
    <link href="/vendor/slick/slick.css" rel="stylesheet" media="all">
    <link href="/vendor/select2/select2.min.css" rel="stylesheet" media="all">
    <link href="/vendor/perfect-scrollbar/perfect-scrollbar.css" rel="stylesheet" media="all">
    <script>
        fetch('/api/profile', {
        headers: {
            'Authorization': `Bearer ${localStorage.getItem('auth')}`
        }
        })
        .then(response => response.json())
        .then(data => {
        if (data.status === 'success') {
            document.querySelectorAll('#profilePicImage').forEach(image => {
                image.src = `/uploads/${data.user.profilePic}`;
            });
            document.querySelectorAll('#profileUsername').forEach(name => {
                name.innerText = data.user.username;
            });
            document.querySelectorAll('#profileScore').forEach(scoreVal => {
                scoreVal.innerText = `Score: ${data.user.score}`;
            });
        } else if (data.status === 'error') {
            window.location.href = '/login'; // redirect to /login
        }
        })
        .catch(error => console.error(error));
    </script>

    <!-- Main CSS-->
    <link href="/css/theme.css" rel="stylesheet" media="all">

</head>

<body class="animsition">
    <div class="page-wrapper">
        <!-- MENU SIDEBAR-->
        <aside class="menu-sidebar d-none d-lg-block">
            <div class="logo">
                    <img src="/images/icon/logo.png" alt="DVAPI" />
            </div>
            <div class="menu-sidebar__content js-scrollbar1">
                <nav class="navbar-sidebar">
                    <ul class="list-unstyled navbar__list">
                        <li>
                            <a href="/challenges">
                                <i class="fas fa-tachometer-alt"></i>Challenges</a>
                        </li>
                        <li>
                            <a href="/scoreboard">
                                <i class="fa  fa-bar-chart-o"></i>Scoreboard</a>
                        </li>
                        <li>
                            <a href="/Swagger">
                                <i class="fa fa-arrow-circle-o-right"></i>API Swagger</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
        <!-- END MENU SIDEBAR-->

        <!-- PAGE CONTAINER-->
        <div class="page-container">
            <!-- HEADER DESKTOP-->
            <header class="header-desktop">
                <div class="section__content section__content--p30">
                    <div class="container-fluid">
                        <div class="header-wrap">
                            <div class="header-button" style="position:absolute;right:0px; margin: 25px;">
                                <div class="noti-wrap">
                                    <div class="noti__item js-item-menu">
                                        <i class="fa fa-ticket" onclick="document.getElementById('ticket-button').click();"></i>
                                    </div>
                                </div>
                                <div class="account-wrap">
                                    <div class="account-item clearfix js-item-menu">
                                        <div class="image">
                                            <img id="profilePicImage" src="/uploads/#" alt="" />
                                        </div>
                                        <div class="content">
                                            <a id="profileUsername" class="js-acc-btn" style="color:aliceblue;" href="#"></a>
                                        </div>
                                        <div class="account-dropdown js-dropdown">
                                            <div class="info clearfix">
                                                <div class="image">
                                                    <a href="/profile">
                                                        <img id="profilePicImage" src="/uploads/#" alt="" />
                                                    </a>
                                                </div>
                                                <div class="content">
                                                    <h5 class="name">
                                                        <a id="profileUsername" href="/profile"></a>
                                                    </h5>
                                                    <h5 class="name">
                                                        <span id="profileScore"></span>
                                                    </h5>
                                                </div>
                                            </div>
                                            <div class="account-dropdown__body">
                                                <div class="account-dropdown__item">
                                                    <a href="/profile">
                                                        <i class="zmdi zmdi-account"></i>Account</a>
                                                </div>
                                            </div>
                                            <div class="account-dropdown__footer">
                                                <a href="/logout" onclick="localStorage.removeItem('auth')">
                                                    <i class="zmdi zmdi-power"></i>Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
            <!-- HEADER DESKTOP-->

            <!-- MAIN CONTENT-->
            <div class="main-content">
                <div class="section__content section__content--p30">
                    <div class="container-fluid">

                        <h4>Progress</h4>
                        <br>
                        <div class="progress ">
                            <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" id="progressbar-strip" role="progressbar" style="width: 0%" aria-valuenow="0"
                             aria-valuemin="0" aria-valuemax="100">0%</div>
                        </div>
                        <div class="row">
                            <!-- Use for loop to loop all challenges -->
                            <div id="overlay" class="overlay"></div>
                            <div id="card2" class="card2"></div>

                            <script>
                                var card = document.getElementById("card2");
                                var overlay = document.getElementById("overlay");

                                function showCard(content) {
                                    // Set the content of the card
                                    card.innerHTML = content;

                                    // Show the card and overlay
                                    card.style.display = "block";
                                    overlay.style.display = "block";
                                    setTimeout(function () {
                                        card.classList.add('show');
                                    }, 0);

                                    // Add a click event listener to the overlay to hide the card when clicked
                                    overlay.addEventListener("click", hideCard);
                                }
                                event.preventDefault();

                                function hideCard() {
                                    // Hide the card and overlay
                                    card.classList.remove('show');
                                    setTimeout(function () {
                                        card.style.display = "none";
                                        overlay.style.display = "none";
                                    }, 500);

                                    // Remove the click event listener from the overlay
                                    overlay.removeEventListener("click", hideCard);
                                }

                                
                            </script>
                              
                            
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API1:2023 Broken Object Level Authorization
                                            <!-- <small>
                                                <span class="badge badge-success float-right mt-1" id="challenge-card-1"></span>
                                            </small> -->
                                        </strong>
                        <div>
                            <small>
                                <span class="badge badge-success text-center"  id="challenge-card-1"></span>
                            </small>
                        </div>               
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">Custom Description</p>
                                     <a href="##" onclick="showCard('<h2>Learn More - Broken Object Level Authorization</h2><br><img src=\'https://assets.website-files.com/5ff66329429d880392f6cba2/60eebb42c6468d31c7a25ce1_Broken%20Object%20Level%20Authorisation%20preview.png\' style=\'display: block; margin: 0 auto;\' width=\'600px\' height=\'300px\'></img><br><p style=\'padding: 0 30px;\'>Authentication endpoints, which are typically public-facing, are a common target for attackers. To prevent attacks, these endpoints should have extra protection measures in place. However, misconfigurations can occur due to insufficient threat modeling.</p>')">Read More</a>


                                              

                                            <br>
                                        <!-- <br> -->
                                        <div class="input-group wrapper">
                                            <form id="challenge-1" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API2:2023 Broken Authentication
                                        </strong>
                                        <div><small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-2"></span>
                                        </small></div>
                                    </div>
                                    
                                    <div class="card-body">
                                        <p class="card-text">Custom Description</p>
                                            <a href="##" onclick="showCard('<h2>Learn More - Broken Authentication</h2><br><img src=\'https://th.bing.com/th/id/OIP.YN2vUsGisFHVfwcu1LryiwHaD6?pid=ImgDet&rs=1\' style=\'display: block; margin: 0 auto;\' width=\'600px\' height=\'300px\'></img><br><p style=\'padding: 0 30px;\'>Authentication endpoints, which are typically public-facing, are a common target for attackers. To prevent attacks, these endpoints should have extra protection measures in place. However, misconfigurations can occur due to insufficient threat modeling.</p>')">Read More</a>                                       
                                            <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-2" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API3:2023 Broken Object Property Level Authorization
                                            <small>
                                                <span class="badge badge-success float-right mt-1" id="challenge-card-3"></span>
                                            </small>
                                        </strong>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">Custom Description</p>
                                            <a href="##" onclick="showCard('<h2>Lear More - Broken Object Property Level Authorization</h2><br><p style=\'padding: 0 30px;\'>APIs perform actions on objects and their properties. Developers may neglect property level authorization, allowing users to modify object properties they shouldn\'t access, despite having object level authorization.</p>')">Read More</a>

                                            <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-3" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API4:2023 Unrestricted Resource Consumption
                                            
                                        </strong>
                                        <div><small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-4"></span>
                                        </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">Costum description</p>                                            
                                        <a href="##" onclick="showCard('<h2>Learn More - Unrestricted Resource Consumption</h2><br><p style=\'padding: 0 30px;\'>API requests consume resources such as CPU/memory, bandwidth, storage, and integrations with other services. Attackers can cause high resource consumption by sending excessive requests, leading to unresponsive APIs or increased business expenses.</p>')">Read More</a>

                                            <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-4" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API5:2023 Broken Function Level Authorization
                                            
                                        </strong>
                                        <div><small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-5"></span>
                                        </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">Custom Description</p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Broken Function Level Authorization</h2><br><p style=\'padding: 0 30px;\'>APIs enable users to perform specific functions on API objects, with some of these functions restricted to certain user permissions. It is crucial to implement proper authorization checks for API functions to ensure users are granted the correct privileges for object manipulation.</p>')">Read More</a>

                                            <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-5" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API6:2023 Server Side Request Forgery
                                            
                                        </strong>
                                        <div><small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-6"></span>
                                        </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">DVAPI is using a function to set SecretNote for your user through a link/url, try to learn more about SSRF and capture the flag !!! </p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Server Side Request Forgery</h2><br><img src=\'https://miro.medium.com/v2/resize:fit:1104/1*oeYbCp36k03j5E4SFhfX0A.png\' style=\'display: block; margin: 0 auto;\' width=\'300px\' height=\'100px\'></img><br><p style=\'padding: 0 30px;\'>Server-Side Request Forgery (SSRF) flaws occur whenever an API is fetching a remote resource without validating the user-supplied URL. It allows an attacker to coerce the application to send a crafted request to an unexpected destination, even when protected by a firewall or a VPN.</p><br><p style=\'padding: 0 30px;\'>So, imagine you\'re a hacker and you want to get access to some secret data or functionality on a server that you\'re not supposed to have access to. How would you do it? You can\'t just waltz in through the front door, right? Well, that\'s where SSRF comes in. SSRF stands for Server-Side Request Forgery, and it\'s a technique that allows a hacker to trick a server into making requests on their behalf. It\'s like getting the server to open the back door for you without it even realizing it!</p><br><p style=\'padding: 0 30px;\'>How does it work? Well, the hacker will first find a vulnerable website that allows them to input a URL. Then, they\'ll craft a special URL that points to the server they want to attack. When the vulnerable website makes a request to the URL provided by the hacker, it will include the hacker\'s malicious instructions in the request headers. These instructions can include things like accessing internal resources or even executing commands on the server!</p><p style=\'padding: 0 30px;\'>So, SSRF is like having a secret passageway that lets you bypass all the security measures put in place to keep you out. It\'s a sneaky and dangerous technique, but also kind of cool in a \'Mission Impossible\' sort of way, don\'t you think?</p><br><a href=\'https://payatu.com/blog/a-basic-approach-to-ssrf\'>Learn SSRF</a><br><a href=\'https://book.hacktricks.xyz/pentesting-web/ssrf-server-side-request-forgery\'>SSRF Attacks</a>')">Read More</a>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-6" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API7:2023 Security Misconfiguration
                                           
                                        </strong>
                                        <div> <small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-7"></span>
                                        </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">The Developers at DVAPI are lazy which has lead to a misconfigured system, find the misconfiguration and submit the flag !!! </p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Security Misconfiguration</h2><br><img src=\'https://th.bing.com/th/id/OIP.MXyMqcEJ6Se0SCWcYCKZTQHaEK\' style=\'display: block; margin: 0 auto;\' width=\'300px\' height=\'100px\'></img><br><p style=\'padding: 0 30px;\'>A security misconfiguration arises when essential security settings are either not implemented or implemented with errors.</p><br><p style=\'padding: 0 30px;\'>In the world of cybersecurity, security misconfiguration is a vulnerability that arises when systems or applications are not configured properly. It\'s like leaving the front door of your house unlocked or your windows wide open. It\'s an open invitation to attackers who are looking for an easy way in.</p><br><p style=\'padding: 0 30px;\'>Security misconfiguration can take many forms, such as not changing default passwords, not patching systems with security updates, or leaving unnecessary ports open or giving out sensitive information in errors. Hackers can exploit these misconfigurations to gain access to sensitive data or to take control of systems.</p><br><a href=\'https://brightsec.com/blog/security-misconfiguration/\'>Understanding Security Misconfiguration</a>')">Read More</a>
                                        <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-7" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API8:2023 Lack of Protection from Automated Threats
                                            <small>
                                                <span class="badge badge-success float-right mt-1" id="challenge-card-8"></span>
                                            </small>
                                        </strong>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">DVAPI is People first applicaiton, we are keen on knowing your requests through submit ticket maybe it'll help you find the flag !!!</p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Lack of Protection from Automated Threats</h2><br><img src=\'https://img.freepik.com/premium-vector/hosting-ddos-attack-vector-icon_116137-4771.jpg\' style=\'display: block; margin: 0 auto;\' width=\'300px\' height=\'50px\'></img><br><p style=\'padding: 0 30px;\'>An automated threat is a type of computer security threat to a computer network or web application, characterised by the malicious use of automated tools such as Internet bots, Using large amounts of repetitive tasks with almost no cost to execute.</p><br><p style=\'padding: 0 30px;\'>Have you ever watched a superhero movie where the hero has to fight off a swarm of robot drones that are attacking them? Well, in the world of cybersecurity, a lack of protection from automated threats is kind of like being attacked by those same robot drones, but in the digital world.</p><br><p style=\'padding: 0 30px;\'>Automated threats are like the robot drones of the cyber world. They are malicious programs that are designed to infiltrate and attack systems automatically, without any human intervention. They can be used to steal sensitive data, launch DDoS attacks, or even take control of entire systems.</p><br><p style=\'padding: 0 30px;\'>A lack of protection from these threats is like being defenseless against the swarm of robot drones. Without the proper safeguards in place, they can wreak havoc on your systems and leave you vulnerable to attack.</p><br>')">Read More</a>
                                        <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-8" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API9:2023 Improper Inventory Management

                                            
                                        </strong>
                                        <div><small>
                                            <span class="badge badge-success float-right mt-1" id="challenge-card-9"></span>
                                        </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">There was a data leak at DVAPI, people found out there are 12 Challenges and not 10, What do you think ? </p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Improper Inventory Management</h2><br><img src=\'https://velosiaims.com/wp-content/uploads/2022/07/asset-mgmt-scaled.jpg\' style=\'display: block; margin: 0 auto;\' width=\'300px\' height=\'50px\'></img><br><p style=\'padding: 0 30px;\'>Improper management of APIs refers to instances when the production APIs are built, utilized, and then no longer managed without being terminated.</p><br><p style=\'padding: 0 30px;\'>Inventory management is all about keeping track of what you have, what you need, and when you need it. When it comes to APIs, improper inventory management can mean not keeping track of all the APIs in use, their access levels, or who has access to them, uat endpoints left open in prod. It\'s like not having a proper recipe for the cake you want to bake – you might have some ingredients, but without the right recipe, you won\'t end up with the cake you wanted.</p><br><p style=\'padding: 0 30px;\'>This can lead to security vulnerabilities, such as unauthorized access or data leaks.</p>')">Read More</a>
                                        <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-9" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            <!-- Challenge card -->
                            <div class="col-md-4">
                                <div class="card" style="height: 90%; ">
                                    <div class="card-header">
                                        <strong class="card-title">API10:2023 Unsafe Consumption of APIs
                                           
                                        </strong>
                                        <div> <small>
                                                <span class="badge badge-success float-right mt-1" id="challenge-card-10"></span>
                                            </small></div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">API's used at the Authentication of the application does not look safe, can you test it and get the flag !!!</p>
                                        <a href="##" onclick="showCard('<h2>Learn More - Unsafe Consumption of APIs</h2><br><img src=\'https://www.mainjava.com/wp-content/uploads/2016/06/docs-inputs-symbol@2x.png\' style=\'display: block; margin: 0 auto;\' width=\'300px\' height=\'50px\'></img><br><p style=\'padding: 0 30px;\'>Developers tend to trust data received from third-party APIs more than user input. This is especially true for APIs offered by well-known companies. Because of that, developers tend to adopt weaker security standards, for instance, in regards to input validation and sanitization.</p><br><p style=\'padding: 0 30px;\'>Have you ever heard the phrase \'you are what you eat\'? Well, in the world of cybersecurity, the same can be said for APIs. Unsafe consumption of APIs is like eating something that might look good, but could actually be harmful to you.</p><p style=\'padding: 0 30px;\'>APIs are like the ingredients in a recipe – they come in all shapes and sizes, and you need to be careful about how you consume them. Unsafe consumption of APIs means using APIs in a way that exposes your systems to security vulnerabilities. It\'s like eating something that might look and smell good, but could give you food poisoning.</p><br><p style=\'padding: 0 30px;\'>This can happen when you don\'t properly authenticate or authorize API requests, or when you don\'t sanitize user inputs. It\'s like not properly washing your hands or cooking your food – it can lead to harmful bacteria and germs entering your system.</p>')">Read More</a>
                                        <br>
                                        <!-- <br> -->
                                        <div class="input-group">
                                            <form id="challenge-10" class="flag-submit-form">
                                                <input type="text" id="flag" name="flag" placeholder="Flag" class="form-control">
                                                <br>
                                                <div class="input-group-btn">
                                                    <button class="btn btn-primary">Submit</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Challenge card -->
                            
                            <script>
                                var forms = document.querySelectorAll(".flag-submit-form");
                                forms.forEach(function(form) {
                                    form.addEventListener("submit", function(event) {
                                        event.preventDefault();
                                        var challengeNo = this.getAttribute("id").split('-')[1];
                                        const formData = new FormData(this);
                                        formObj =  Object.fromEntries(formData);
                                        formObj.challengeNo = challengeNo;
                                        form.getElementsByTagName('input')[0].value = "";
                                        // alert(JSON.stringify(formObj));
                                        // do something with the form data
                                        fetch("/api/flag/submit", {
                                                        method: "POST",
                                                        body: JSON.stringify(formObj),
                                                        headers: { "Content-Type": "application/json", 'Authorization': `Bearer ${localStorage.getItem('auth')}` }
                                                    })
                                                    .then(r => r.json())
                                                    .then(data => {
                                                        if (data.status === "success") {
                                                            alert(data.message);
                                                            updateProgressBar(data);
                                                        }
                                                        else {
                                                            alert(data.message);
                                                            updateProgressBar(data);
                                                        }
                                                    })
                                                    .catch(console.error);
                                    });
                                });
                            </script>
                        </div>
                    </div>
                </div>
            </div>
            <!-- modal for ticket -->
            <div class="col-md4" style="margin-left: 50%; margin-right: 10%;">
                <button type="button" hidden id="ticket-button" class="btn btn-secondary mb-1" data-toggle="modal" data-target="#mediumModal">
                    Have any question on a challenge? Create a ticket.
                </button>
            </div>
            <div class="modal fade" id="mediumModal" tabindex="-1" role="dialog" aria-labelledby="mediumModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="mediumModalLabel">Have any query regarding a challenge? Create a ticket!</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <form action="" method="post" id="ticket-form">
                            <div class="modal-body">
                                <textarea id="message" rows="4" name="message" class="form-control" maxlength="500"></textarea>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" id="close-modal" data-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Confirm</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <!-- end modal -->
        </div>
        <!-- END PAGE CONTAINER-->
        <script>
            const ticketForm = document.getElementById("ticket-form");
            ticketForm.addEventListener("submit", e => {
            e.preventDefault();
            const formData = new FormData(ticketForm);
            fetch("/api/addTicket", {
                method: "POST",
                body: JSON.stringify(Object.fromEntries(formData)),
                headers: { "Content-Type": "application/json", 'Authorization': `Bearer ${localStorage.getItem('auth')}` }
            })
            .then(r => r.json())
            .then(data => {
                var icon = document.querySelector('.fa-ticket');
                var originalColor = "rgb(169, 179, 201)";
                icon.style.color = 'green';
                try {
                    if (data.status === "success") {
                        icon.style.color = 'green';
                    }
                    else {
                        icon.style.color = 'red';
                    }
                }
                catch {
                    icon.style.color = 'red';
                }
                setTimeout(function() {
                    icon.style.color = originalColor;
                }, 3000);
                document.getElementById('close-modal').click();
                document.getElementById('message').value = "";
            })
            .catch(console.error);
            });
            document.getElementById('close-modal').click();
        </script>
        <script>
            // Obtain the challenge solves for the user
            function updateProgressBar(data) {
                var solves = data.solves;
                var solveCount = 0;
                for (var i = 1; i <= 10; i++) {
                    if (solves[i] === 1) {
                        $('#challenge-card-' + i).text('Solved').attr('class', 'badge badge-success float-right mt-1');
                        solveCount += 1;
                    }
                    if (solves[i] === 0) {
                        $('#challenge-card-' + i).text('Not solved').attr('class', 'badge badge-danger float-right mt-1');
                    }
                }
                var solvePercentage = solveCount * (100/10);
                $('#progressbar-strip').attr('style', `width: ${solvePercentage}%`).attr('aria-valuenow',`${solvePercentage}`).text(`${solvePercentage}`);
            }
            function getSolves(){
                fetch('/api/getSolves', {
                    headers: {'Authorization': `Bearer ${localStorage.getItem('auth')}`}
                })
                .then(response => response.json())
            .then(data => {
                updateProgressBar(data);
                // <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" role="progressbar" style="width: 25%" aria-valuenow="25"
                //              aria-valuemin="0" aria-valuemax="100">25%</div>
                
            })
            .catch(error => console.error(error));
            }
            getSolves();
        </script>
    </div>

    <!-- Jquery JS-->
    <script src="/vendor/jquery-3.2.1.min.js"></script>
    <!-- Bootstrap JS-->
    <script src="/vendor/bootstrap-4.1/popper.min.js"></script>
    <script src="/vendor/bootstrap-4.1/bootstrap.min.js"></script>
    <!-- Vendor JS       -->
    <script src="/vendor/slick/slick.min.js">
    </script>
    <script src="/vendor/wow/wow.min.js"></script>
    <script src="/vendor/animsition/animsition.min.js"></script>
    <script src="/vendor/bootstrap-progressbar/bootstrap-progressbar.min.js">
    </script>
    <script src="/vendor/counter-up/jquery.waypoints.min.js"></script>
    <script src="/vendor/counter-up/jquery.counterup.min.js">
    </script>
    <script src="/vendor/circle-progress/circle-progress.min.js"></script>
    <script src="/vendor/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="/vendor/chartjs/Chart.bundle.min.js"></script>
    <script src="/vendor/select2/select2.min.js">
    </script>

    <!-- Main JS-->
    <script src="/js/main.js"></script>

</body>

</html>
<!-- end document-->
